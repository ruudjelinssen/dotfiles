#
# weechat -- plugins.conf
#
# WARNING: It is NOT recommended to edit this file by hand,
# especially if WeeChat is running.
#
# Use /set or similar command to change settings in WeeChat.
#
# For more info, see: https://weechat.org/doc/quickstart
#

[var]
fifo.fifo = "on"
guile.check_license = "off"
javascript.check_license = "off"
lua.check_license = "off"
perl.check_license = "off"
perl.highmon.alignment = "channel"
perl.highmon.away_only = "off"
perl.highmon.bar_lines = "250"
perl.highmon.bar_scrolldown = "off"
perl.highmon.color_buf = "on"
perl.highmon.first_run = "true"
perl.highmon.hotlist_show = "off"
perl.highmon.logging = "off"
perl.highmon.merge_private = "on"
perl.highmon.nick_prefix = " "
perl.highmon.nick_suffix = " "
perl.highmon.output = "bar"
perl.highmon.short_names = "off"
perl.nickregain.2600net_command = ""
perl.nickregain.2600net_command_delay = "0"
perl.nickregain.2600net_delay = "60"
perl.nickregain.2600net_enabled = "off"
perl.nickregain.bitlbee_command = ""
perl.nickregain.bitlbee_command_delay = "0"
perl.nickregain.bitlbee_delay = "60"
perl.nickregain.bitlbee_enabled = "off"
perl.nickregain.freenode_command = ""
perl.nickregain.freenode_command_delay = "0"
perl.nickregain.freenode_delay = "60"
perl.nickregain.freenode_enabled = "off"
perl.nickregain.znc_freenode_command = ""
perl.nickregain.znc_freenode_command_delay = "0"
perl.nickregain.znc_freenode_delay = "60"
perl.nickregain.znc_freenode_enabled = "off"
perl.notify_send.command = "notify-send $type: $name &>/dev/null"
perl.notify_send.ignore_nicks = ""
perl.notify_send.wait_highlight = "60"
perl.notify_send.wait_pm = "180"
python.auto_away.idletime = "20"
python.auto_away.message = "Idle"
python.autojoin.autosave = "off"
python.buffer_autoclose.age_limit = "30"
python.buffer_autoclose.ignore = ""
python.buffer_autoclose.interval = "1"
python.check_license = "off"
python.go.auto_jump = "off"
python.go.buffer_number = "on"
python.go.color_name = "235,208"
python.go.color_name_highlight = "235,214"
python.go.color_name_highlight_selected = "235,172"
python.go.color_name_selected = "235,166"
python.go.color_number = "223,239"
python.go.color_number_selected = "223,239"
python.go.fuzzy_search = "on"
python.go.message = "Go: "
python.go.short_name = "on"
python.go.sort = "number,beginning"
python.go.use_core_instead_weechat = "off"
python.grep.clear_buffer = "off"
python.grep.default_tail_head = "10"
python.grep.go_to_buffer = "on"
python.grep.log_filter = ""
python.grep.max_lines = "4000"
python.grep.show_summary = "on"
python.grep.size_limit = "2048"
python.grep.timeout_secs = "300"
python.notify_send.ellipsis = "[..]"
python.notify_send.escape_html = "on"
python.notify_send.icon = "/usr/share/icons/hicolor/32x32/apps/weechat.png"
python.notify_send.ignore_buffers = ""
python.notify_send.ignore_buffers_starting_with = ""
python.notify_send.ignore_messages_tagged_with = "notify_none,irc_join,irc_quit,irc_part,irc_status,irc_nick_back,irc_401,irc_402"
python.notify_send.ignore_nicks = ""
python.notify_send.ignore_nicks_starting_with = ""
python.notify_send.max_length = "72"
python.notify_send.min_notification_delay = "500"
python.notify_send.nick_separator = ""
python.notify_send.notify_for_current_buffer = "on"
python.notify_send.notify_on_all_messages_in_buffers = ""
python.notify_send.notify_on_all_messages_in_buffers_that_match = ""
python.notify_send.notify_on_filtered_messages = "off"
python.notify_send.notify_on_highlights = "on"
python.notify_send.notify_on_messages_that_match = ""
python.notify_send.notify_on_privmsgs = "on"
python.notify_send.notify_when_away = "on"
python.notify_send.timeout = "5000"
python.notify_send.transient = "on"
python.notify_send.urgency = "normal"
python.shortenurl.bitly_add_to_history = "true"
python.shortenurl.bitly_key = ""
python.shortenurl.bitly_login = ""
python.shortenurl.color = "167"
python.shortenurl.ignore_list = "http://is.gd,http://tinyurl.com,http://bit.ly"
python.shortenurl.short_own = "off"
python.shortenurl.shortener = "isgd"
python.shortenurl.urllength = "30"
python.slack.auto_open_threads = "false"
python.slack.background_load_all_history = "false"
python.slack.channel_name_typing_indicator = "true"
python.slack.color_buflist_muted_channels = "darkgray"
python.slack.color_edited_suffix = "095"
python.slack.color_reaction_suffix = "darkgray"
python.slack.color_thread_suffix = "214"
python.slack.colorize_private_chats = "false"
python.slack.debug_level = "3"
python.slack.debug_mode = "false"
python.slack.distracting_channels = ""
python.slack.external_user_suffix = "*"
python.slack.files_download_location = ""
python.slack.group_name_prefix = "&"
python.slack.map_underline_to = "_"
python.slack.migrated = "true"
python.slack.muted_channels_activity = "personal_highlights"
python.slack.never_away = "false"
python.slack.notify_usergroup_handle_updated = "false"
python.slack.record_events = "false"
python.slack.render_bold_as = "bold"
python.slack.render_italic_as = "italic"
python.slack.send_typing_notice = "true"
python.slack.server_aliases = "ctf-ru:CTF-RU"
python.slack.shared_name_prefix = "%"
python.slack.short_buffer_names = "false"
python.slack.show_buflist_presence = "true"
python.slack.show_reaction_nicks = "false"
python.slack.slack_api_token = "${sec.data.slacktoken}"
python.slack.slack_timeout = "20000"
python.slack.switch_buffer_on_join = "true"
python.slack.thread_messages_in_channel = "false"
python.slack.unfurl_auto_link_display = "both"
python.slack.unfurl_ignore_alt_text = "false"
python.slack.unhide_buffers_with_activity = "false"
python.text_item.hilight_monitor_title_text = "all [Highlight Monitor]"
python.text_item.interval = "0"
python.vimode.copy_clipboard_cmd = "xclip -selection c"
python.vimode.imap_esc = ""
python.vimode.imap_esc_timeout = "1000"
python.vimode.line_number_prefix = ""
python.vimode.line_number_suffix = " "
python.vimode.mode_indicator_cmd_color = "white"
python.vimode.mode_indicator_cmd_color_bg = "cyan"
python.vimode.mode_indicator_insert_color = "white"
python.vimode.mode_indicator_insert_color_bg = "blue"
python.vimode.mode_indicator_normal_color = "white"
python.vimode.mode_indicator_normal_color_bg = "gray"
python.vimode.mode_indicator_prefix = ""
python.vimode.mode_indicator_replace_color = "white"
python.vimode.mode_indicator_replace_color_bg = "red"
python.vimode.mode_indicator_search_color = "white"
python.vimode.mode_indicator_search_color_bg = "magenta"
python.vimode.mode_indicator_suffix = ""
python.vimode.no_warn = "off"
python.vimode.paste_clipboard_cmd = "xclip -selection c -o"
python.vimode.search_vim = "off"
python.vimode.user_mappings = ""
python.zncplayback.servers = ""
ruby.check_license = "off"
ruby.colorizer.buffer_regex = ""
ruby.colorizer.rule.0 = ""
ruby.colorizer.rule.1 = ""
ruby.colorizer.rule.2 = ""
ruby.colorizer.rule.3 = ""
ruby.colorizer.rule.4 = ""
ruby.colorizer.rule.count = "10"
tcl.check_license = "off"

[desc]
perl.notify_send.command = "systemcommand to be executed ($type, $name, and $messagewill be interpreted as values) (default: "notify-send $type: $name &>/dev/null")"
perl.notify_send.ignore_nicks = "comma-separated list of nicks to ignore (default: "")"
perl.notify_send.wait_highlight = "necessary time delay between highlights(seconds) for command to be executed (default: "60")"
perl.notify_send.wait_pm = "necessary time delay between private messages(seconds) for command to be executed (default: "180")"
python.go.auto_jump = "automatically jump to buffer when it is uniquely selected (default: "off")"
python.go.buffer_number = "display buffer number (default: "on")"
python.go.color_name = "color for buffer name (not selected) (default: "black,cyan")"
python.go.color_name_highlight = "color for highlight in buffer name (not selected) (default: "red,cyan")"
python.go.color_name_highlight_selected = "color for highlight in a selected buffer name (default: "red,brown")"
python.go.color_name_selected = "color for a selected buffer name (default: "black,brown")"
python.go.color_number = "color for buffer number (not selected) (default: "yellow,magenta")"
python.go.color_number_selected = "color for selected buffer number (default: "yellow,red")"
python.go.fuzzy_search = "search buffer matches using approximation (default: "off")"
python.go.message = "message to display before list of buffers (default: "Go to: ")"
python.go.short_name = "display and search in short names instead of buffer name (default: "off")"
python.go.sort = "comma-separated list of keys to sort buffers (the order is important, sorts are performed in the given order): name = sort by name (or short name),  (default: "number,beginning")"
python.go.use_core_instead_weechat = "use name "core" instead of "weechat" for core buffer (default: "off")"
python.notify_send.ellipsis = "Ellipsis to be used for notifications that are too long. Default: [..]."
python.notify_send.escape_html = "Escapes the '<', '>', and '&' characters in notification messages. Default: on."
python.notify_send.icon = "Path to an icon to be shown in notifications. Default: /usr/share/icons/hicolor/32x32/apps/weechat.png."
python.notify_send.ignore_buffers = "A comma-separated list of buffers from which no notifications should be shown. Default: ""."
python.notify_send.ignore_buffers_starting_with = "A comma-separated list of buffer prefixes from which no notifications should be shown. Default: ""."
python.notify_send.ignore_messages_tagged_with = "A comma-separated list of message tags for which no notifications should be shown. Default: notify_none,irc_join,irc_quit,irc_part,irc_status,irc_nick_back,irc_401,irc_402."
python.notify_send.ignore_nicks = "A comma-separated list of nicks from which no notifications should be shown. Default: ""."
python.notify_send.ignore_nicks_starting_with = "A comma-separated list of nick prefixes from which no notifications should be shown. Default: ""."
python.notify_send.max_length = "Maximal length of a notification (0 means no limit). Default: 72."
python.notify_send.min_notification_delay = "A minimal delay between successive notifications from the same buffer (in milliseconds; set to 0 to show all notifications). Default: 500."
python.notify_send.nick_separator = "A separator between a nick and a message. Default: : ."
python.notify_send.notify_for_current_buffer = "Send also notifications for the currently active buffer. Default: on."
python.notify_send.notify_on_all_messages_in_buffers = "A comma-separated list of buffers for which you want to receive notifications on all messages that appear in them. Default: ""."
python.notify_send.notify_on_all_messages_in_buffers_that_match = "A comma-separated list of regex patterns of buffers for which you want to receive notifications on all messages that appear in them. Default: ""."
python.notify_send.notify_on_filtered_messages = "Send notifications also on filtered (hidden) messages. Default: off."
python.notify_send.notify_on_highlights = "Send notifications on highlights. Default: on."
python.notify_send.notify_on_messages_that_match = "A comma-separated list of regex patterns that you want to receive notifications on when message body matches. Default: ""."
python.notify_send.notify_on_privmsgs = "Send notifications on private messages. Default: on."
python.notify_send.notify_when_away = "Send also notifications when away. Default: on."
python.notify_send.timeout = "Time after which the notification disappears (in milliseconds; set to 0 to disable). Default: 5000."
python.notify_send.transient = "When a notification expires or is dismissed, remove it from the notification bar. Default: on."
python.notify_send.urgency = "Urgency (low, normal, critical). Default: normal."
python.slack.auto_open_threads = "Automatically open threads when mentioned or inresponse to own messages."
python.slack.background_load_all_history = "Load history for each channel in the background as soon as it opens, rather than waiting for the user to look at it."
python.slack.channel_name_typing_indicator = "Change the prefix of a channel from # to > when someone is typing in it. Note that this will (temporarily) affect the sort order if you sort buffers by name rather than by number."
python.slack.color_buflist_muted_channels = "Color to use for muted channels in the buflist"
python.slack.color_edited_suffix = "Color to use for (edited) suffix on messages that have been edited."
python.slack.color_reaction_suffix = "Color to use for the [:wave:(@user)] suffix on messages that have reactions attached to them."
python.slack.color_thread_suffix = "Color to use for the [thread: XXX] suffix on messages that have threads attached to them."
python.slack.colorize_private_chats = "Whether to use nick-colors in DM windows."
python.slack.debug_level = "Show only this level of debug info (or higher) when debug_mode is on. Lower levels -> more messages."
python.slack.debug_mode = "Open a dedicated buffer for debug messages and start logging to it. How verbose the logging is depends on log_level."
python.slack.distracting_channels = "List of channels to hide."
python.slack.external_user_suffix = "The suffix appended to nicks to indicate external users."
python.slack.files_download_location = "If set, file attachments will be automatically downloaded to this location. "%h" will be replaced by WeeChat home, "~/.weechat" by default."
python.slack.group_name_prefix = "The prefix of buffer names for groups (private channels)."
python.slack.map_underline_to = "When sending underlined text to slack, use this formatting character for it. The default ("_") sends it as italics. Use "*" to send bold instead."
python.slack.muted_channels_activity = "Control which activity you see from muted channels, either none, personal_highlights, all_highlights or all. none: Don't show any activity. personal_highlights: Only show personal highlights, i.e. not @channel and @here. all_highlights: Show all highlights, but not other messages. all: Show all activity, like other channels."
python.slack.never_away = "Poke Slack every five minutes so that it never marks you "away"."
python.slack.notify_usergroup_handle_updated = "Control if you want to see notification when a usergroup's handle has changed, either true or false."
python.slack.record_events = "Log all traffic from Slack to disk as JSON."
python.slack.render_bold_as = "When receiving bold text from Slack, render it as this in weechat."
python.slack.render_italic_as = "When receiving bold text from Slack, render it as this in weechat. If your terminal lacks italic support, consider using "underline" instead."
python.slack.send_typing_notice = "Alert Slack users when you are typing a message in the input bar (Requires reload)"
python.slack.server_aliases = "A comma separated list of `subdomain:alias` pairs. The alias will be used instead of the actual name of the slack (in buffer names, logging, etc). E.g `work:no_fun_allowed` would make your work slack show up as `no_fun_allowed` rather than `work.slack.com`."
python.slack.shared_name_prefix = "The prefix of buffer names for shared channels."
python.slack.short_buffer_names = "Use `foo.#channel` rather than `foo.slack.com.#channel` as the internal name for Slack buffers."
python.slack.show_buflist_presence = "Display a `+` character in the buffer list for present users."
python.slack.show_reaction_nicks = "Display the name of the reacting user(s) alongside each reactji."
python.slack.slack_api_token = "List of Slack API tokens, one per Slack instance you want to connect to. See the README for details on how to get these."
python.slack.slack_timeout = "How long (ms) to wait when communicating with Slack."
python.slack.switch_buffer_on_join = "When /joining a channel, automatically switch to it as well."
python.slack.thread_messages_in_channel = "When enabled shows thread messages in the parent channel."
python.slack.unfurl_auto_link_display = "When displaying ("unfurling") links to channels/users/etc, determine what is displayed when the text matches the url without the protocol. This happens when Slack automatically creates links, e.g. from words separated by dots or email addresses. Set it to "text" to only display the text written by the user, "url" to only display the url or "both" (the default) to display both."
python.slack.unfurl_ignore_alt_text = "When displaying ("unfurling") links to channels/users/etc, ignore the "alt text" present in the message and instead use the canonical name of the thing being linked to."
python.slack.unhide_buffers_with_activity = "When activity occurs on a buffer, unhide it even if it was previously hidden (whether by the user or by the distracting_channels setting)."
python.text_item.interval = "How often (in seconds) to force an update of all items. 0 means deactivated"
python.vimode.copy_clipboard_cmd = "command used to copy to clipboard; must read input from stdin (default: "xclip -selection c")"
python.vimode.imap_esc = "use alternate mapping to enter Normal mode while in Insert mode; having it set to 'jk' is similar to `:imap jk <Esc>` in vim (default: "")"
python.vimode.imap_esc_timeout = "time in ms to wait for the imap_esc sequence to complete (default: "1000")"
python.vimode.line_number_prefix = "prefix for line numbers (default: "")"
python.vimode.line_number_suffix = "suffix for line numbers (default: " ")"
python.vimode.mode_indicator_cmd_color = "color for mode indicator in Command mode (default: "white")"
python.vimode.mode_indicator_cmd_color_bg = "background color for mode indicator in Command mode (default: "cyan")"
python.vimode.mode_indicator_insert_color = "color for mode indicator in Insert mode (default: "white")"
python.vimode.mode_indicator_insert_color_bg = "background color for mode indicator in Insert mode (default: "blue")"
python.vimode.mode_indicator_normal_color = "color for mode indicator in Normal mode (default: "white")"
python.vimode.mode_indicator_normal_color_bg = "background color for mode indicator in Normal mode (default: "gray")"
python.vimode.mode_indicator_prefix = "prefix for the bar item mode_indicator (default: "")"
python.vimode.mode_indicator_replace_color = "color for mode indicator in Replace mode (default: "white")"
python.vimode.mode_indicator_replace_color_bg = "background color for mode indicator in Replace mode (default: "red")"
python.vimode.mode_indicator_search_color = "color for mode indicator in Search mode (default: "white")"
python.vimode.mode_indicator_search_color_bg = "background color for mode indicator in Search mode (default: "magenta")"
python.vimode.mode_indicator_suffix = "suffix for the bar item mode_indicator (default: "")"
python.vimode.no_warn = "don't warn about problematic keybindings and tmux/screen (default: "off")"
python.vimode.paste_clipboard_cmd = "command used to paste clipboard; must output content to stdout (default: "xclip -selection c -o")"
python.vimode.search_vim = "allow n/N usage after searching (requires an extra <Enter> to return to normal mode) (default: "off")"
python.vimode.user_mappings = "see the `:nmap` command in the README for more info; please do not modify this field manually unless you know what you're doing (default: "")"
python.zncplayback.servers = "Comma-separated list of servers that playback should be fetched for (default: "")"
ruby.colorizer.buffer_regex = "Only colorize text in buffers with names that match this regex. Leaving this empty matches all buffer names."
ruby.colorizer.rule.0 = "A colorizing rule of the form: <regular_expression>/<weechat_color_name> Empty rules are ignored."
ruby.colorizer.rule.1 = "A colorizing rule of the form: <regular_expression>/<weechat_color_name> Empty rules are ignored."
ruby.colorizer.rule.2 = "A colorizing rule of the form: <regular_expression>/<weechat_color_name> Empty rules are ignored."
ruby.colorizer.rule.3 = "A colorizing rule of the form: <regular_expression>/<weechat_color_name> Empty rules are ignored."
ruby.colorizer.rule.4 = "A colorizing rule of the form: <regular_expression>/<weechat_color_name> Empty rules are ignored."
ruby.colorizer.rule.count = "The maximum number of rules to look for in your config."
